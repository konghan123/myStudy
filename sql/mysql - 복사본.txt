표들을 그룹핑한것이 데이터베이스(=스키마)
데이터베이스를 그룹핑한 것이 데이터베이스 서버
데이터베이스 효용 1.보안 (데이터베이스는 자체적인 보안체계를 가지고 있다)
                          2.권한 기능 (권한을 주어 특정 구간만 제어할 수 있는 권한을 부여할 수있다.)
-u >> 이런 사용자로 접근하겟다는 뜻 ex.-uroot 루트사용자로 접근                          
-p >> 비밀번호를 물어보는 칸 생성
스키마 만들기 >> CREATE DATABASE 데이터베이스 이름;
스키마 지우기 >> DROP DATABASE 데이터베이스 이름;
**윗쪽 화살표키를 누르면 이전에 썻던 문구가 뜸
스키마 리스트 보기 >> SHOW DATABASES;
스키마 사용 >> USE 데이터베이스 이름;
**sql에는 콜럼에 다양한 문자를 넣을 수 있슴 >> 잘못사용하면 사용자끼리 헷갈림
>> 그래서 데이터타입을 정해서 규제가능하다.

표안의 컬럼 만들기 >> CREATE TABLE 테이블이름(
                            -> id INT(노출시킬 숫자 수) 
**NOT NULL >>값이 없는걸 허용하지 않겟는 뜻
** 어떤 값을 부를때 아이디값을 부르는게 더 효율적 (이름으로 부르면 중복될 수 있슴)
>>그래서 아이디콜럼을 자동적으로 1씩증가하는 것이 좋다.(중복되지 않는 식별자를 가진다) 
>>AUTO_INCREMENT
**글자 수 규제도 가능하다 >>VARCHAR(노출 시킬 글자 수)  
**PRIMARY KEY(콜럼); >> 해당 테이블에 있는 이 콜럼이 메인키라는 뜻
                              >> 이 컬럼은 중복이 불가능하다는 뜻
테이블 보는 방법 >> SHOW TABLES FROM 데이터베이스 이름;
자료 생성방법 >>INSERT문 >> INSERT INTO 테이블이름 (콜럼1, 콜럼2, 콜럼3 ..........)
                   VALUES (자료1, 자료2, 자료3 ...............)               
**DESC 테이블이름 >>> 그 테이블의 구조를 보여준다.
자료 읽는 방법 >> SELECT * FROM 해당테이블; (해당 테이블의 모든데이터를 보여줌)
                     >> SELECT 콜럼1, 콜럼2 FROM 해당 테이블 (콜럼1 콜럼2 자료를 보여줌)
                     >> SELECT 콜럼1, 콜럼2 FROM 해당 테이블 WHERE 콜럼1 ='자료'; (콜럼1콜럼2에서 '자료'만 모아서 보여줌)
                     >> SELECT 콜럼1, 콜럼2 FROM 해당 테이블 WHERE 콜럼1 ='자료' ORDER BY 콜럼1 DESC (콜럼1을 기준으로 큰순서대로 정렬하며 보여줌)
                     >> SELECT 콜럼1, 콜럼2 FROM 해당 테이블 WHERE 콜럼1 ='자료' ORDER BY 콜럼1 DESC LIMIT 2 (콜럼1을 기준으로 큰순서대로 정렬하며 2개만 보여줌)
업데이트 방법  >> UPDATE 테이블이름 SET 콜럼1='어떤값1', 콜럼2='어떤값2' WHERE 해당되는 행의 아무 콜럼 =' 그 콜럼에 들어있는 값'; 
                          ( 해당되는 행에서 콜럼1에 어떤값1 콜럼2에 어떤값2를 수정한다는 뜻)
******************************업데이트 할땐 WHERE 문 무조건 필수필수!!!!*****************
삭제하는 방법 >>DELETE FROM 테이블이름 WHERE 해당되는 행의 아무 콜럼 =' 그 콜럼에 들어있는 값'; 
*******************************삭제도 WHERE 문 필수필수!!!!*************************

관계형 데이터베이스의 필요성 > 유지보수가 편해지고 중복으로 인한 문제를 줄일 수 있다.
테이블 이름바꾸기 >> RENAME TABLE 테이블이름 TO 원하는 이름;
JOIN의 사용법 >>SELECT * FROM 테이블이름 LFTT JOIN 합칠테이블이름 ON 연결될 콜럼2 = 연결될 콜럼1; (연결될콜럼은 테이블이름.콜럼1 이런식으로 써야함)
***SELECT topic.id AS topic_id  FROM topic LEFT JOIN author ON topic.author_id = author.id; >> AS를 통해 콜럼의 이름을 바꿔줄 수 있다.
원하는 서버 들어가기 >> mysql\ -uroot -p -h들어가고싶은도메인
